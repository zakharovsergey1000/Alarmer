package biz.advancedcalendar.greendao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import android.os.Parcel;
import android.os.Parcelable;
// KEEP INCLUDES END
/**
 * Entity mapped to table CALENDAR.
 */
public class Calendar implements Parcelable {

    private Long id;
    private Long syncId;
    /** Not-null value. */
    private String name;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Calendar() {
    }

    public Calendar(Long id) {
        this.id = id;
    }

    public Calendar(Long id, Long syncId, String name) {
        this.id = id;
        this.syncId = syncId;
        this.name = name;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getSyncId() {
        return syncId;
    }

    public void setSyncId(Long syncId) {
        this.syncId = syncId;
    }

    /** Not-null value. */
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(String name) {
        this.name = name;
    }

    // KEEP METHODS - put your custom methods here
	protected Calendar(Parcel in) {
		id = in.readByte() == 0x00 ? null : in.readLong();
		syncId = in.readByte() == 0x00 ? null : in.readLong();
		name = in.readString();
	}

	@Override
	public int describeContents() {
		return 0;
	}

	@Override
	public void writeToParcel(Parcel dest, int flags) {
		if (id == null) {
			dest.writeByte((byte) 0x00);
		} else {
			dest.writeByte((byte) 0x01);
			dest.writeLong(id);
		}
		if (syncId == null) {
			dest.writeByte((byte) 0x00);
		} else {
			dest.writeByte((byte) 0x01);
			dest.writeLong(syncId);
		}
		dest.writeString(name);
	}

	@SuppressWarnings("unused")
	public static final Parcelable.Creator<Calendar> CREATOR = new Parcelable.Creator<Calendar>() {
		@Override
		public Calendar createFromParcel(Parcel in) {
			return new Calendar(in);
		}

		@Override
		public Calendar[] newArray(int size) {
			return new Calendar[size];
		}
	};
    // KEEP METHODS END

}
